on: [push]
jobs:
  build-and-deploy:
    env:
      REGISTRY_URL:  kapasrijkubacr.azurecr.io
      SERVICE_NAME: kpjavakubernetes  
      NAMESPACE: $SERVICE_NAME  
      IMAGE_NAME: $SERVICE_NAME
      APP_NAME: $(SERVICE_NAME)_
      SECRET_NAME: kpjavakubernetesdockerauth

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: $REGISTRY_URL
        username: abc
        password: xyz
    
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build '$GITHUB_WORKSPACE/node/plain/container/Application" -f  "node/plain/container/application/Dockerfile" 
        docker push $REGISTRY_URL/$IMAGE_NAME
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: kpjavakubernetes_b549e
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep $NAMESPACE | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace $NAMESPACE`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: $NAMESPACE
        container-registry-url: $REGISTRY_URL
        container-registry-username: abc
        container-registry-password: xyz
        secret-name: $SECRET_NAME
       
    - name: Generate Kubernetes Manifest file
      id: manifest-creation
      run: |
        echo  "apiVersion : apps/v1beta1
              kind: Deployment
              metadata:
                name: "$APP_NAME"
              spec:
                replicas: 2
                template:
                  metadata:
                    labels:
                      app: "$APP_NAME"
              spec:
                containers:
                  - name: "$APP_NAME"
                    image: "$REGISTRY_URL/$IMAGE_NAME"
                    ports:
                    - containerPort: 8080
                  
                  

                apiVersion: v1
                kind: Service
                metadata:
                    name: "$APP_NAME"
                    labels:
                        app: "$APP_NAME"
                spec:
                    type: LoadBalancer
                    ports:
                    - port: 8080
                      targetPort: http
                      protocol: TCP
                      name: http
                    selector:
                        app: "$APP_NAME"
                        
                 "  > manifest_.yml


    - uses: azure/k8s-deploy@v1
      with:
        namespace: $NAMESPACE
        manifests: |
          .yml }}}
        images: |
          $REGISTRY_URL/$IMAGE_NAME:abc
        imagepullsecrets: |
          $SECRET_NAME
